{"version":3,"sources":["modules/snake.js","modules/treat.js","modules/board.js","modules/game.js","SplashScreen.js","App.js","serviceWorker.js","index.js"],"names":["Snake","coordinates","direction","moveSnake","frontPieceMovement","x","y","frontPixel","this","movedFrontPixel","unshift","pop","expandSnake","lastPixel","length","push","snakeHasRunIntoItself","snakeCoordinates","head","shift","filter","snakeIsWithinBoundaries","maximumBorder","coordinate","Treat","changeTreatPosition","Math","floor","random","Board","dimensions","size","snake","treat","Game","board","isPaused","score","gameLoop","snakeHead","snakeHasReachedTreat","alert","window","location","reload","setSnakeDirection","resumeGame","pauseGame","getIsPaused","SplashScreen","show","id","onClick","game","pixels","hasSnakePiece","some","pixel","hasTreat","getBoardPixels","map","index","className","key","snakepiece","Controls","App","useState","setGame","document","addEventListener","event","console","log","addArrowKeyListeners","useEffect","setTimeout","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6TAAe,SAASA,IAqDpB,MAAO,CACHC,YArDc,GAsDdC,UArDY,OAsDZC,UApDJ,WACI,IAAIC,EAAqB,CACrB,KAAQ,CACJC,GAAI,EACJC,EAAG,GAEP,MAAS,CACLD,EAAG,EACHC,EAAG,GAEP,GAAM,CACFD,EAAG,EACHC,GAAI,GAER,KAAQ,CACJD,EAAG,EACHC,EAAG,IAIPC,EAAaC,KAAKP,YAAY,GAC9BQ,EAAkB,CAClBJ,EAAGE,EAAWF,EAAID,EAAmBI,KAAKN,WAAWG,EACrDC,EAAGC,EAAWD,EAAIF,EAAmBI,KAAKN,WAAWI,GAEzDE,KAAKP,YAAYS,QAAQD,GACzBD,KAAKP,YAAYU,OA2BjBC,YAxBJ,WACI,IAAIC,EAAYL,KAAKP,YAAYO,KAAKP,YAAYa,OAAS,GAC3DN,KAAKP,YAAYc,KAAK,CAClBV,EAAGQ,EAAUR,EACbC,EAAGO,EAAUP,KAqBjBU,sBAjBJ,WACI,IAAIC,EAAgB,YAAOT,KAAKP,aAC5BiB,EAAOD,EAAiBE,QAC5B,OAAOF,EAAiBG,QAAO,SAACnB,GAAD,OAAiBA,EAAYI,IAAMa,EAAKb,GAAKJ,EAAYK,IAAMY,EAAKZ,KAAGQ,OAAS,GAe/GO,wBAZJ,SAAiCC,GAG7B,OAA2C,IAFbd,KAAKP,YAAYmB,QAAO,SAACG,GAAD,OAAgBA,EAAWlB,EAAI,GAAKkB,EAAWjB,EAAI,GAAKiB,EAAWlB,EAAIiB,EAAcjB,GAAKkB,EAAWjB,EAAIgB,EAAchB,KAC/GQ,SCjDvD,SAASU,IAUpB,MAAM,CACFvB,YAVc,GAWdwB,oBATJ,WACIjB,KAAKP,YAAc,CACfI,EAAGqB,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,GACnCtB,EAAGoB,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,MCHhC,SAASC,IASpB,MAAM,CACFC,WARa,CACbC,KAAM,IAQNC,MALQ,IAAIhC,EAMZiC,MALQ,IAAIT,GCRL,SAASU,IACpB,IAAIC,EAAQ,IAAIN,EAEZO,GAAW,EAuDf,OArDAD,EAAMH,MAAM/B,YAAc,CACtB,CAACI,EAAG,GAAIC,EAAG,IACX,CAACD,EAAG,GAAIC,EAAG,IACX,CAACD,EAAG,GAAIC,EAAG,IACX,CAACD,EAAG,GAAIC,EAAG,KAGf6B,EAAMF,MAAMhC,YAAc,CAACI,EAAG,EAAGC,EAAG,GA8C7B,CACH+B,MAzDQ,EA0DRF,QACAG,SA/CJ,YACoB,IAAbF,IAIHD,EAAMH,MAAM7B,YAahB,WACI,IAAIoC,EAAYJ,EAAMH,MAAM/B,YAAY,GACxC,OAAOsC,EAAUlC,IAAM8B,EAAMF,MAAMhC,YAAYI,GAAKkC,EAAUjC,IAAM6B,EAAMF,MAAMhC,YAAYK,EAdzFkC,KACCL,EAAMF,MAAMR,sBACZU,EAAMH,MAAMpB,cACZJ,KAAK6B,MAAQ7B,KAAK6B,MAAQ,GAetBF,EAAMH,MAAMX,wBAAwB,CAAChB,EAAG,GAAIC,EAAG,OAC5C6B,EAAMH,MAAMhB,0BAZnByB,MAAM,gBAAkBjC,KAAK6B,OAC7BK,OAAOC,SAASC,YAkCpBC,kBApBJ,SAA2B3C,GACvBiC,EAAMH,MAAM9B,UAAYA,GAoBxB4C,WAjBJ,WACIV,GAAW,GAiBXW,UAdJ,WACIX,GAAW,GAcXY,YAXJ,WACI,OAAOZ,GAWPA,Y,MCtDOa,MAXf,YAA0C,IAAnBC,EAAkB,EAAlBA,KAAMJ,EAAY,EAAZA,WACzB,OACI,yBAAKK,GAAG,gBAAgBD,KAAMA,GAC1B,qCACA,4BAAQE,QAAS,WACbN,MADJ,gBCwBZ,SAASjB,EAAT,GAAuB,IAAPwB,EAAM,EAANA,KACd,OACE,6BAASF,GAAG,SAahB,SAAwBE,GAEtB,IADA,IAAIC,EAAS,GACLhD,EAAI,EAAIA,GAAK,GAAKA,IACxB,IAAI,IAAID,EAAI,EAAIA,GAAK,GAAKA,IACxBiD,EAAOvC,KAAK,CACVV,IACAC,IACAiD,cAAeF,EAAKlB,MAAMH,MAAM/B,YAAYuD,MAAK,SAACC,GAAD,OAAWA,EAAMpD,IAAMA,GAAKoD,EAAMnD,IAAMA,KACzFoD,SAAUL,EAAKlB,MAAMF,MAAMhC,YAAYI,IAAMA,GAAKgD,EAAKlB,MAAMF,MAAMhC,YAAYK,IAAMA,IAK3F,OAAOgD,EAxBHK,CAAeN,GAAMO,KAAI,SAACH,EAAOI,GAAR,OAAkB,yBAAKC,UAAW,cACzDC,IAAKF,EAAOxD,EAAGoD,EAAMpD,EAAGC,EAAGmD,EAAMnD,EACjC0D,YAAoC,IAAxBP,EAAMF,cAAyB,IAAK,IAChDtB,OAA0B,IAAnBwB,EAAMC,SAAoB,IAAK,UAyB9C,SAASO,EAAT,GAAkD,IAA/BpB,EAA8B,EAA9BA,kBAAmBE,EAAW,EAAXA,UACpC,OACE,6BAASI,GAAG,YACV,4BAAQC,QAAS,kBAAMP,EAAkB,OAAOiB,UAAU,aAA1D,MACA,4BAAQV,QAAS,kBAAMP,EAAkB,SAASiB,UAAU,eAA5D,QACA,4BAAQV,QAAS,kBAAMP,EAAkB,UAAUiB,UAAU,gBAA7D,SACA,4BAAQV,QAAS,kBAAMP,EAAkB,SAASiB,UAAU,eAA5D,QACA,4BAAQV,QAAS,kBAAML,KAAae,UAAU,gBAA9C,UAiCSI,MAhGf,WAAgB,IAAD,EAEWC,mBAAS,IAAIjC,GAFxB,mBAENmB,EAFM,KAEAe,EAFA,KAYb,OAwDF,SAA8Bf,GAC5BgB,SAASC,iBAAiB,WAAW,SAACC,GAGpC,OAFiBA,EAAMR,KAGrB,IAAK,UACHV,EAAKR,kBAAkB,MACvB,MAEF,IAAK,YACHQ,EAAKR,kBAAkB,QACvB,MAEF,IAAK,YACHQ,EAAKR,kBAAkB,QACvB,MAEF,IAAK,aACHQ,EAAKR,kBAAkB,SACvB,MAEF,QACE2B,QAAQC,IAAI,wCAvFlBC,CAAqBrB,GAErBsB,qBAAU,WACRC,YAAW,WACTvB,EAAKf,WACL8B,EAAQ,eAAIf,MACX,OACF,CAACA,IAGF,yBAAKS,UAAU,OACb,yBAAKA,UAAU,iBAAf,UAAuCT,EAAKhB,OAC5C,kBAAC,EAAD,CAAOgB,KAAMA,IACb,kBAACY,EAAD,CAAUpB,kBAAmBQ,EAAKR,kBAAmBE,UAAWM,EAAKN,YAErE,kBAAC,EAAD,CAAcG,KAAMG,EAAKL,cAAgB,IAAM,IAAKF,WAAY,kBAAMO,EAAKP,kBCb7D+B,QACW,cAA7BnC,OAAOC,SAASmC,UAEe,UAA7BpC,OAAOC,SAASmC,UAEhBpC,OAAOC,SAASmC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFb,SAASc,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnB,QAAQmB,MAAMA,EAAMC,c","file":"static/js/main.cb7e9952.chunk.js","sourcesContent":["export default function Snake(){\r\n    var coordinates = []\r\n    var direction = \"LEFT\"\r\n\r\n    function moveSnake(){\r\n        var frontPieceMovement = {\r\n            \"LEFT\": {\r\n                x: -1,\r\n                y: 0\r\n            },\r\n            \"RIGHT\": {\r\n                x: 1,\r\n                y: 0\r\n            },\r\n            \"UP\": {\r\n                x: 0,\r\n                y: -1\r\n            },\r\n            \"DOWN\": {\r\n                x: 0,\r\n                y: 1\r\n            }\r\n        }\r\n\r\n        var frontPixel = this.coordinates[0]\r\n        var movedFrontPixel = {\r\n            x: frontPixel.x + frontPieceMovement[this.direction].x,\r\n            y: frontPixel.y + frontPieceMovement[this.direction].y\r\n        }\r\n        this.coordinates.unshift(movedFrontPixel)\r\n        this.coordinates.pop()\r\n    }\r\n\r\n    function expandSnake(){\r\n        var lastPixel = this.coordinates[this.coordinates.length - 1]\r\n        this.coordinates.push({\r\n            x: lastPixel.x,\r\n            y: lastPixel.y\r\n        })\r\n    }\r\n\r\n    function snakeHasRunIntoItself(){\r\n        var snakeCoordinates = [...this.coordinates]\r\n        var head = snakeCoordinates.shift()\r\n        return snakeCoordinates.filter((coordinates) => coordinates.x === head.x && coordinates.y === head.y).length > 0\r\n    }\r\n\r\n    function snakeIsWithinBoundaries(maximumBorder){\r\n        var coordinatesBeyondBorder = this.coordinates.filter((coordinate) => coordinate.x < 1 || coordinate.y < 1 || coordinate.x > maximumBorder.x || coordinate.y > maximumBorder.y)\r\n        var numberOfCoordinatesBeyondBorder = coordinatesBeyondBorder.length\r\n        return numberOfCoordinatesBeyondBorder === 0\r\n    } \r\n\r\n    return {\r\n        coordinates,\r\n        direction,\r\n        moveSnake,\r\n        expandSnake,\r\n        snakeHasRunIntoItself,\r\n        snakeIsWithinBoundaries\r\n    }\r\n}","export default function Treat(){\r\n    var coordinates = {}\r\n\r\n    function changeTreatPosition() {\r\n        this.coordinates = {\r\n            x: Math.floor(Math.random() * 20 + 1),\r\n            y: Math.floor(Math.random() * 20 + 1)\r\n        }\r\n    }\r\n\r\n    return{\r\n        coordinates,\r\n        changeTreatPosition\r\n    }\r\n}","import Snake from \"./snake\"\r\nimport Treat from \"./treat\"\r\n\r\nexport default function Board(){\r\n    \r\n    let dimensions = {\r\n        size: 20,\r\n    }\r\n\r\n    let snake = new Snake()\r\n    let treat = new Treat()\r\n\r\n    return{\r\n        dimensions,\r\n        snake,\r\n        treat\r\n    }\r\n\r\n\r\n}","import Board from \"./board\"\r\n\r\nexport default function Game(){\r\n    var board = new Board()\r\n    var score = 0\r\n    var isPaused = true\r\n\r\n    board.snake.coordinates = [\r\n        {x: 10, y: 10},\r\n        {x: 11, y: 10},\r\n        {x: 12, y: 10},\r\n        {x: 13, y: 10}\r\n    ]\r\n\r\n    board.treat.coordinates = {x: 3, y: 3}\r\n\r\n    function gameLoop(){\r\n        if(isPaused === true){\r\n            return\r\n        }\r\n\r\n        board.snake.moveSnake()\r\n        if(snakeHasReachedTreat()){\r\n            board.treat.changeTreatPosition()\r\n            board.snake.expandSnake()\r\n            this.score = this.score + 1\r\n        }\r\n\r\n        if(playerHasLost()){\r\n            alert(\"Final score: \" + this.score)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    function snakeHasReachedTreat(){\r\n        var snakeHead = board.snake.coordinates[0]\r\n        return snakeHead.x === board.treat.coordinates.x && snakeHead.y === board.treat.coordinates.y\r\n    }\r\n\r\n    function playerHasLost(){\r\n        return !board.snake.snakeIsWithinBoundaries({x: 20, y: 20}) \r\n                || board.snake.snakeHasRunIntoItself()\r\n    }\r\n\r\n    function setSnakeDirection(direction){\r\n        board.snake.direction = direction\r\n    }\r\n\r\n    function resumeGame(){\r\n        isPaused = false\r\n    }\r\n\r\n    function pauseGame(){\r\n        isPaused = true\r\n    }\r\n\r\n    function getIsPaused(){\r\n        return isPaused\r\n    }\r\n\r\n    return {\r\n        score,\r\n        board,\r\n        gameLoop,\r\n        setSnakeDirection,\r\n        resumeGame,\r\n        pauseGame,\r\n        getIsPaused,\r\n        isPaused\r\n    }\r\n}","import React from 'react';\r\nimport \"./style/splash-screen.css\"\r\n\r\nfunction SplashScreen({show, resumeGame}){\r\n    return (\r\n        <div id=\"splash-screen\" show={show}>\r\n            <h1>Snake</h1>\r\n            <button onClick={() => {\r\n                resumeGame()\r\n            }}>Start game</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SplashScreen;","import React, { useState, useEffect } from 'react';\r\nimport \"./style/general.css\"\r\nimport \"./style/board.css\"\r\nimport \"./style/controls.css\"\r\nimport Game from \"./modules/game\"\r\nimport SplashScreen from \"./SplashScreen\"\r\n\r\nfunction App() {\r\n  \r\n  const [game, setGame] = useState(new Game())\r\n  addArrowKeyListeners(game)\r\n  \r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      game.gameLoop()\r\n      setGame({...game})\r\n    }, 300)\r\n  }, [game])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"score-display\">Score: {game.score}</div>\r\n      <Board game={game}/>\r\n      <Controls setSnakeDirection={game.setSnakeDirection} pauseGame={game.pauseGame}/>\r\n\r\n      <SplashScreen show={game.getIsPaused() ? \"1\" : \"0\"} resumeGame={() => game.resumeGame()}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Board({game}){\r\n  return (\r\n    <section id=\"board\">\r\n    {\r\n      getBoardPixels(game).map((pixel, index) => <div className={\"board-pixel\"} \r\n        key={index} x={pixel.x} y={pixel.y} \r\n        snakepiece={pixel.hasSnakePiece === true ? \"1\": \"0\"}\r\n        treat={pixel.hasTreat === true ? \"1\": \"0\"}>\r\n\r\n      </div>)\r\n    }\r\n    </section>\r\n  )\r\n}\r\n\r\nfunction getBoardPixels(game){\r\n  var pixels = []\r\n  for(var y = 1 ; y <= 20 ; y++){\r\n    for(var x = 1 ; x <= 20 ; x++){\r\n      pixels.push({\r\n        x,\r\n        y, \r\n        hasSnakePiece: game.board.snake.coordinates.some((pixel) => pixel.x === x && pixel.y === y),\r\n        hasTreat: game.board.treat.coordinates.x === x && game.board.treat.coordinates.y === y\r\n      })\r\n    }\r\n    \r\n  }\r\n  return pixels\r\n          \r\n}\r\n\r\nfunction Controls({setSnakeDirection, pauseGame}){\r\n  return (\r\n    <section id=\"controls\">\r\n      <button onClick={() => setSnakeDirection(\"UP\")} className=\"up-button\">UP</button>\r\n      <button onClick={() => setSnakeDirection(\"LEFT\")} className=\"left-button\">LEFT</button>\r\n      <button onClick={() => setSnakeDirection(\"RIGHT\")} className=\"right-button\">RIGHT</button>\r\n      <button onClick={() => setSnakeDirection(\"DOWN\")} className=\"down-button\">DOWN</button>\r\n      <button onClick={() => pauseGame()} className=\"pause-button\">Pause</button>\r\n    </section>\r\n  )\r\n}\r\n\r\nfunction addArrowKeyListeners(game){\r\n  document.addEventListener(\"keydown\", (event) => {\r\n    var keyPressed = event.key\r\n\r\n    switch(keyPressed){\r\n      case \"ArrowUp\":\r\n        game.setSnakeDirection(\"UP\")\r\n        break\r\n\r\n      case \"ArrowDown\":\r\n        game.setSnakeDirection(\"DOWN\")\r\n        break\r\n\r\n      case \"ArrowLeft\":\r\n        game.setSnakeDirection(\"LEFT\")\r\n        break\r\n\r\n      case \"ArrowRight\":\r\n        game.setSnakeDirection(\"RIGHT\")\r\n        break\r\n\r\n      default:\r\n        console.log(\"Only arrow keys do anything here\");\r\n    }\r\n  })\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}